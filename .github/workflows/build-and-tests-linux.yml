name: "Build and Test (Linux)"
on:
  push:
    branches: 
      - 0.7
    tags:
      - v*
  pull_request:
    branches:
      - 0.7
env:
  BUILD_TYPE: Release
  DEBIAN_FRONTEND: noninteractive
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build_and_test_linux:
    name: Build and Test (Linux)
    strategy:
      matrix:
        config:
          - os: ubuntu-22.04
            pkgs: qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools libqt5svg5-dev libqt5serialport5-dev
          - os: ubuntu-20.04
            pkgs: qt5-default libqt5svg5-dev libqt5serialport5-dev
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "Add SHORT_SHA env property with commit short sha"
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - name: "Install Qt"
        shell: bash
        run: sudo apt update && sudo apt install -y ${{ matrix.config.pkgs }}
      - name: "Create Build Environment"
        run: cmake -E make_directory ${{runner.workspace}}/build
      - name: "Configure CMake"
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake ${{runner.workspace}}/qfm1000 -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      - name: "Build"
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE --parallel
      - name: "Test"
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest -C $BUILD_TYPE --output-on-failure
      - name: "Package"
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cpack
      - name: "Upload Release Asset"
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "qfm1000-${{ github.ref_name }}-amd64-${{ matrix.config.os }}.deb"
          files: "${{ runner.workspace }}/build/qfm1000-${{ github.ref_name }}-amd64.deb"
