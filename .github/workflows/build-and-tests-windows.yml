name: "Build and Test (Windows)"
on:
  push:
    branches:
      - 0.7
    tags:
      - v*
  pull_request:
    branches:
      - 0.7
env:
  BUILD_TYPE: Release
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build_and_test_windows:
    name: Build and Test (Windows)
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        qt:
          - version: 5.15.2
            arch: win32_msvc2019
          - version: 5.15.2
            arch: win64_msvc2019_64
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "Install Qt"
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt.version }}
          arch: ${{ matrix.qt.arch }}
      - name: "Create Build Environment"
        shell: cmd
        run: cmake -E make_directory ${{runner.workspace}}\build
      - name: "Configure CMake"
        working-directory: ${{runner.workspace}}\build
        shell: cmd
        run: cmake ${{runner.workspace}}\qfm1000 -DCMAKE_BUILD_TYPE=%BUILD_TYPE% -DQT5_DIR=D:\a\qfm1000\Qt\${{ matrix.qt.version }}\msvc2019
      - name: "Build"
        working-directory: ${{runner.workspace}}\build
        shell: cmd
        run: cmake --build . --config %BUILD_TYPE% --parallel
      - name: "Test"
        working-directory: ${{runner.workspace}}\build
        shell: cmd
        run: ctest -C %BUILD_TYPE% --output-on-failure
      - name: "Package"
        working-directory: ${{runner.workspace}}\build
        shell: cmd
        run: cpack
      - name: "Upload Release Asset"
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "qFM1000 ${{ github.ref_name }}"
          files: "${{ runner.workspace }}/build/*.msi"
